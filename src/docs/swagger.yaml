swagger: "2.0"
info:
  version: "1.0.0"
  title: "TINNOVA - Documentação de teste"
  description: "Aplicação de controle de veículos."
  termsOfService: "http://swagger.io/terms/"
  contact:
    email: "felipe.samidare@hotmail.com"
  license:
    name: "MIT"
    url: "https://opensource.org/licenses/MIT"
host: "localhost"
basePath: "/v1"
tags:
- name: "vehicles"
  externalDocs:
    description: "Find out more"
    url: "http://swagger.io"
schemes:
- "http"
paths:
  /vehicles:
    post:
      tags:
      - "vehicles"
      summary: "Adiciona um novo veículo"
      description: "Retorna um objeto"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "List of user object"
        required: true
        schema:
          $ref: "#/definitions/AddVehicleModel"
      responses:
        "400":
          description: "bad request"
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/VehicleModel"
    get:
      tags:
      - "vehicles"
      summary: "Retorna todos os veículos cadastrados"
      description: "Retorna um array"
      produces:
      - "application/json"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/VehicleModel"
  /vehicles/{id}:
    delete:
      tags:
      - "vehicles"
      summary: "Delete um veículo pelo id"
      description: "Retorna um objeto"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "ID de um veículo para consulta"
        required: true
        type: "integer"
      responses:
        "404":
          description: "not found"
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/VehicleModel"
    put:
      tags:
      - "vehicles"
      summary: "Edita um veículo pelo id"
      description: "Retorna um objeto"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "ID de um veículo para consulta"
        required: true
        type: "integer"
      - in: "body"
        name: "body"
        description: "List of user object"
        required: true
        schema:
          $ref: "#/definitions/UpdateVehicleModel"
      responses:
        "400":
          description: "bad request"
        "404":
          description: "not found"
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/VehicleModel"
    get:
      tags:
      - "vehicles"
      summary: "Retorna apenas o veículo selecionado"
      description: "Retorna um objeto"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "ID de um veículo para consulta"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "404":
          description: "not found"
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/VehicleModel"
definitions:
  VehicleModel:
    type: "object"
    properties:
      id:
        type: "integer"
      vehicle:
        type: "string"
      brand:
        type: "string"
        enum:
          - "Chevrolet"
          - "Volkswagen"
          - "Fiat"
          - "Renault"
          - "Ford"
          - "Toyota"
          - "Hyundai"
          - "Jeep"
          - "Honda"
          - "Nissan"
          - "Citroën"
          - "Mitsubishi"
          - "Peugeot"
          - "Chery"
          - "BMW"
          - "Mercedes Benz"
          - "Kia"
          - "Audi"
          - "Volvo"
          - "Land Rover"
      year:
        type: "integer"
        example: 2021
      description:
        type: "string"
      sold:
        type: "boolean"
        example: false
      hidden:
        type: "boolean"
        example: false
      createdAt:
        type: "string"
        format: "date-time"
      updatedAt:
        type: "string"
        format: "date-time"
  AddVehicleModel:
    type: "object"
    required: ["vehicle", "brand", "year", "description", "sold"]
    properties:
      vehicle:
        type: "string"
      brand:
        type: "string"
        enum:
          - "Chevrolet"
          - "Volkswagen"
          - "Fiat"
          - "Renault"
          - "Ford"
          - "Toyota"
          - "Hyundai"
          - "Jeep"
          - "Honda"
          - "Nissan"
          - "Citroën"
          - "Mitsubishi"
          - "Peugeot"
          - "Chery"
          - "BMW"
          - "Mercedes Benz"
          - "Kia"
          - "Audi"
          - "Volvo"
          - "Land Rover"
      year:
        type: "integer"
        example: 2021
      description:
        type: "string"
      sold:
        type: "boolean"
        example: false
  UpdateVehicleModel:
    type: "object"
    properties:
      vehicle:
        type: "string"
      brand:
        type: "string"
        enum:
          - "Chevrolet"
          - "Volkswagen"
          - "Fiat"
          - "Renault"
          - "Ford"
          - "Toyota"
          - "Hyundai"
          - "Jeep"
          - "Honda"
          - "Nissan"
          - "Citroën"
          - "Mitsubishi"
          - "Peugeot"
          - "Chery"
          - "BMW"
          - "Mercedes Benz"
          - "Kia"
          - "Audi"
          - "Volvo"
          - "Land Rover"
      year:
        type: "integer"
        example: 2021
      description:
        type: "string"
      sold:
        type: "boolean"
        example: false
externalDocs:
  description: "Find out more about Swagger"
  url: "http://swagger.io"